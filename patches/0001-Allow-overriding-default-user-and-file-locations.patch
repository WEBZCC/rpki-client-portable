From 51d1456103c822a19ff5ac9d9f8a9ac7dafa7bae Mon Sep 17 00:00:00 2001
From: Claudio Jeker <claudio@openbsd.org>
Date: Tue, 14 Apr 2020 22:43:56 +0200
Subject: [PATCH 1/3] Allow overriding default user and file locations

---
 src/usr.sbin/rpki-client/extern.h | 20 ++++++++++++++++++++
 src/usr.sbin/rpki-client/main.c   | 12 ++++++------
 2 files changed, 26 insertions(+), 6 deletions(-)

diff --git src/usr.sbin/rpki-client/extern.h src/usr.sbin/rpki-client/extern.h
index 0fa14e1a3..a21597e49 100644
--- src/usr.sbin/rpki-client/extern.h
+++ src/usr.sbin/rpki-client/extern.h
@@ -456,8 +456,28 @@ void	logx(const char *fmt, ...)
 
 int	mkpath(const char *);
 
+#ifndef RPKI_PATH_TAL_DIR
+#define		RPKI_PATH_TAL_DIR	"/etc/rpki"
+#endif
+
+#ifndef RPKI_PATH_OUT_DIR
 #define		RPKI_PATH_OUT_DIR	"/var/db/rpki-client"
+#endif
+
+#ifndef RPKI_PATH_BASE_DIR
 #define		RPKI_PATH_BASE_DIR	"/var/cache/rpki-client"
+#endif
+
+#ifndef RPKI_VERSION
 #define		RPKI_VERSION		"OpenBSD"
+#endif
+
+#ifndef RPKI_CLIENT_USER
+#define		RPKI_CLIENT_USER	"_rpki-client"
+#endif
+
+#ifndef RPKI_RSYNC_CMD
+#define		RPKI_RSYNC_CMD		"openrsync"
+#endif
 
 #endif /* ! EXTERN_H */
diff --git src/usr.sbin/rpki-client/main.c src/usr.sbin/rpki-client/main.c
index e922b7fe4..4fad87d57 100644
--- src/usr.sbin/rpki-client/main.c
+++ src/usr.sbin/rpki-client/main.c
@@ -724,7 +724,7 @@ entity_process(int proc, struct stats *st, struct vrp_tree *tree)
 }
 
 /*
- * Assign filenames ending in ".tal" in "/etc/rpki" into "tals",
+ * Assign filenames ending in ".tal" in RPKI_PATH_TAL_DIR into "tals",
  * returning the number of files found and filled-in.
  * This may be zero.
  * Don't exceded "max" filenames.
@@ -732,7 +732,7 @@ entity_process(int proc, struct stats *st, struct vrp_tree *tree)
 static size_t
 tal_load_default(const char *tals[], size_t max)
 {
-	static const char *confdir = "/etc/rpki";
+	static const char *confdir = RPKI_PATH_TAL_DIR;
 	size_t s = 0;
 	char *path;
 	DIR *dirp;
@@ -850,7 +850,7 @@ main(int argc, char *argv[])
 	struct pollfd	 pfd[3];
 	struct roa	**out = NULL;
 	struct repo	*rp;
-	char		*rsync_prog = "openrsync";
+	char		*rsync_prog = RPKI_RSYNC_CMD;
 	char		*bind_addr = NULL;
 	const char	*cachedir = NULL, *outputdir = NULL;
 	const char	*tals[TALSZ_MAX], *errs;
@@ -864,9 +864,9 @@ main(int argc, char *argv[])
 	if (getuid() == 0) {
 		struct passwd *pw;
 
-		pw = getpwnam("_rpki-client");
+		pw = getpwnam(RPKI_CLIENT_USER);
 		if (!pw)
-			errx(1, "no _rpki-client user to revoke to");
+			errx(1, "no %s user to revoke to", RPKI_CLIENT_USER);
 		if (setgroups(1, &pw->pw_gid) == -1 ||
 		    setresgid(pw->pw_gid, pw->pw_gid, pw->pw_gid) == -1 ||
 		    setresuid(pw->pw_uid, pw->pw_uid, pw->pw_uid) == -1)
@@ -962,7 +962,7 @@ main(int argc, char *argv[])
 	if (talsz == 0)
 		talsz = tal_load_default(tals, TALSZ_MAX);
 	if (talsz == 0)
-		err(1, "no TAL files found in %s", "/etc/rpki");
+		err(1, "no TAL files found in %s", RPKI_PATH_TAL_DIR);
 
 	/*
 	 * Create the file reader as a jailed child process.
-- 
2.30.1

